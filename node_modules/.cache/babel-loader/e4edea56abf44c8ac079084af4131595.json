{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zimba\\\\Desktop\\\\GMIT\\\\(DRQ) Data Representation Querying\\\\week 7\\\\lab 6\\\\my-app\\\\src\\\\components\\\\Read.js\";\nimport React from 'react';\nimport { Movies } from './Movies';\nimport axios from 'axios';\nexport class Read extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n  }\n\n  //every time a component change a promise is send to a website that return data either succesfull or unsuccsesfull\n  componentDidMount() {\n    //HTTP client that allows us to make GET and POST requests from the browser\n    axios.get('http://localhost:4000/api/movies').then(response => {\n      this.setState({\n        movies: response.data.movies\n      }); //setStates doing UI update and calling the render method. \n    }).catch(error => {\n      // if its unfulfilled its gonna generate an error in the console\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Hello from my read component\"), /*#__PURE__*/React.createElement(Movies, {\n      movies: this.state.movies,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/zimba/Desktop/GMIT/(DRQ) Data Representation Querying/week 7/lab 6/my-app/src/components/Read.js"],"names":["React","Movies","axios","Read","Component","state","movies","componentDidMount","get","then","response","setState","data","catch","error","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEtCC,KAFsC,GAE9B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF8B;AAAA;;AAMvC;AACCC,EAAAA,iBAAiB,GAAG;AAChB;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,kCAAV,EACKC,IADL,CACWC,QAAD,IAAc;AAChB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEI,QAAQ,CAACE,IAAT,CAAcN;AAAxB,OAAd,EADgB,CAC+B;AAClD,KAHL,EAIKO,KAJL,CAIYC,KAAD,IAAW;AAAE;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANL;AAOH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,eAEI,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBqC","sourcesContent":["import React from 'react';\r\nimport { Movies } from './Movies';\r\nimport axios from 'axios';\r\n\r\nexport class Read extends React.Component {\r\n\r\n    state = {\r\n        movies: []\r\n\r\n    };\r\n   //every time a component change a promise is send to a website that return data either succesfull or unsuccsesfull\r\n    componentDidMount() {\r\n        //HTTP client that allows us to make GET and POST requests from the browser\r\n        axios.get('http://localhost:4000/api/movies')\r\n            .then((response) => {\r\n                this.setState({ movies: response.data.movies })//setStates doing UI update and calling the render method. \r\n            })\r\n            .catch((error) => { // if its unfulfilled its gonna generate an error in the console\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Hello from my read component</h3>\r\n                <Movies movies={this.state.movies}></Movies>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}